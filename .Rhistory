fix_data <- work_data
fix_data$steps[is.na(fix_data$steps)] <- average_over_days_matrix[(fix_data$date[which(is.na(fix_data$steps))]$min/5)+1,fix_data$date[which(is.na(fix_data$steps))]$hour]
a <- average_over_days_matrix[(fix_data$date[which(is.na(fix_data$steps))]$min/5)+1,fix_data$date[which(is.na(fix_data$steps))]$hour]
str(a)
a
fix_data$date[which(is.na(fix_data$steps))]$hour
which(is.na(fix_data$steps))
sum(work)
sum(is.na(work_data$steps))
fix_data$date[which(is.na(work_data$steps))]$hour
a<- average_over_days_matrix[(fix_data$date[which(is.na(work_data$steps))]$min/5)+1,fix_data$date[which(is.na(work_data$steps))]$hour]
str(a)
head(a)
class(a)
unlist(a)
class(unlist(a))
dim()
dim(a)
fix_data <- work_data
b <- fix_data$steps[is.na(fix_data$steps)]
str(b)
fix_data <- work_data
logical <- is.na(work_data$steps)
for(i in 1:length(fix_data$steps)){
if(is.na(fix_data$steps[i]))
{
fix_data$steps[i] <- average_over_days_matrix[(fix_data$date[i]$min/5)+1,
fix_data$date[i]$hour]
}
}
fix_data <- work_data
logical <- is.na(work_data$steps)
for(i in 1:length(fix_data$steps)){
if(is.na(fix_data$steps[i]))
{
fix_data$steps[i] <- average_over_days_matrix[(fix_data$date[i]$min/5)+1,
fix_data$date[i]$hour]
Sys.sleep(0.3)
}
}
for(i in 1:length(fix_data$steps)){
if(is.na(fix_data$steps[i]))
{
fix_data$steps[i] <- average_over_days_matrix[((fix_data$date[i]$min/5)+1.0),fix_data$date[i]$hour]
}
}
is.na(fix_data$steps[11])
average_over_days_matrix[fix_date$date[10]$hour]
average_over_days_matrix[fix_data$
date[10]$hour]
fix_data$date[10]$hour
fix_data$date[109]$hour
fix_data <- work_data
logical <- is.na(work_data$steps)
for(i in 1:length(fix_data$steps)){
if(is.na(fix_data$steps[i]))
{
fix_data$steps[i] <- average_over_days_matrix[(fix_data$date[i]$min/5)+1,fix_data$date[i]$hour+1]
}
}
str(fix_data)
if_else_weekend <- function(date){
isweekend <- ifelse(weekdays(as.Date(date))=="Saturday"|weekdays(as.Date(date))=="Sunday",
yes = "weekend",
no = "weekday")
return(as.factor(isweekend))
}
fix_data <- mutate(fix_data, if_else_weekend(fix_data$date))
names(fix_data)[4] <- "isweekend"
names(fix_data)[3] <- "isweekend"
head(fix_data)
fix_data <- mutate(fix_data, isweekday = if_else_weekend(fix_data$date))
head(fix_data)
fix_data <- work_data
logical <- is.na(work_data$steps)
for(i in 1:length(fix_data$steps)){
if(is.na(fix_data$steps[i]))
{
fix_data$steps[i] <- average_over_days_matrix[(fix_data$date[i]$min/5)+1,fix_data$date[i]$hour+1]
}
}
if_else_weekend <- function(date){
isweekend <- ifelse(weekdays(as.Date(date))=="Saturday"|weekdays(as.Date(date))=="Sunday",
yes = "weekend",
no = "weekday")
return(as.factor(isweekend))
}
fix_data <- mutate(fix_data, isweekend = if_else_weekend(fix_data$date))
levels(fix_data$isweekend)
str(fix_data$isweekend)
sum(fix_data$isweekend=="weekend")
sum(fix_data$isweekend=="weekday")
if_else_weekend <- function(date){
isweekend <- ifelse(weekdays(as.Date(date))=="Saturday"|weekdays(as.Date(date))=="Sunday",
yes = "weekend",
no = "weekday")
return (isweekend)
}
isweekend <- as.factor(sapply(X = fix_data$date, FUN = if_else_extension))
fix_data <- mutate(fix_data, isweekend = isweekend)
isweekend <- as.factor(sapply(X = fix_data$date, FUN = if_else_weekend))
if_else_weekend <- function(date){
isweekend <- ifelse(weekdays(date)=="Saturday"|weekdays(date)=="Sunday",
yes = "weekend",
no = "weekday")
return (isweekend)
}
ar <- weekdays(fix_data$date[1])
ar
Sys.setlocale("LC_TIME","English")
if_else_weekend <- function(date){
isweekend <- ifelse(weekdays(date)=="Saturday"|weekdays(date)=="Sunday",
yes = "weekend",
no = "weekday")
return (isweekend)
}
isweekend <- as.factor(sapply(X = fix_data$date, FUN = if_else_weekend))
fix_data <- mutate(fix_data, isweekend = isweekend)
if_else_weekend <- function(date){
isweekend <- ifelse(weekdays(as.Date(date))=="Saturday"|weekdays(as.Date(date))=="Sunday",
yes = "weekend",
no = "weekday")
return (isweekend)
}
isweekend <- as.factor(sapply(X = fix_data$date, FUN = if_else_weekend))
if_else_weekend <- function(date){
isweekend <- ifelse(weekdays(as.Date(date, origin = "origin="1970-01-01""))=="Saturday"|weekdays(as.Date(date,origin = origin="1970-01-01"))=="Sunday",
yes = "weekend",
no = "weekday")
return (isweekend)
}
isweekend <- as.factor(sapply(X = fix_data$date, FUN = if_else_weekend))
if_else_weekend <- function(date){
isweekend <- ifelse(weekdays(as.Date(date, origin = "1970-01-01"))=="Saturday"|weekdays(as.Date(date,origin = "1970-01-01"))=="Sunday",
yes = "weekend",
no = "weekday")
return (isweekend)
}
isweekend <- as.factor(sapply(X = fix_data$date, FUN = if_else_weekend))
?as.Date
if_else_weekend <- function(date){
isweekend <- ifelse(weekdays(date)=="Saturday"|weekdays(date)=="Sunday",
yes = "weekend",
no = "weekday")
return (isweekend)
}
isweekend <- as.factor(sapply(X = as.Date(fix_data$date), FUN = if_else_weekend))
str(isweekend)
View(fix_data)
fix_data <- mutate(fix_data, isweekend = isweekend)
str(isweekend)
View(fix_data)
str(fix_data)
fix_data <- mutate(fix_data, isweekend = isweekend)
str(fix_data)
str(isweekend)
fix_data <- mutate(fix_data, weekend = isweekend)
str(fix_data)
str(fix_data$weekend)
class(fix_data$weekend)
dim(fix_data)
length(isweekend)
levels(isweekend)
fix_data <- cbind(fix_data, isweekend)
str(fix_data)
fix_data <- work_data
logical <- is.na(work_data$steps)
for(i in 1:length(fix_data$steps)){
if(is.na(fix_data$steps[i]))
{
fix_data$steps[i] <- average_over_days_matrix[(fix_data$date[i]$min/5)+1,
fix_data$date[i]$hour+1]
}
}
fix_data <- cbind(fix_data, isweekend)
str(fix_data)
fix_data <- mutate(fix_data, weekend = isweekend)
str(fix_data)
fix_data <- work_data
logical <- is.na(work_data$steps)
for(i in 1:length(fix_data$steps)){
if(is.na(fix_data$steps[i]))
{
fix_data$steps[i] <- average_over_days_matrix[(fix_data$date[i]$min/5)+1,
fix_data$date[i]$hour+1]
}
}
fix_data <- mutate(fix_data, weekend = isweekend)
average_over_days_matrix <- tapply(X = fix_data$steps,
INDEX = list(as.factor(work_data$date$hour),
as.factor(work_data$date$min)),
FUN = mean)
average_over_days_matrix <- t(average_over_days_matrix)
average_over_days <- average_over_days_matrix
dim(average_over_days) <- NULL
qplot(x = intervals,
y = average_over_days,
geom = "line", xlab = "Time Interval", ylab = "Average steps over days",
facets = .~weekend)+
scale_x_datetime(labels = date_format("%H:00"))
average_over_days_matrix <- tapply(X = fix_data$steps,
INDEX = list(as.factor(work_data$date$hour),
as.factor(work_data$date$min)),
FUN = mean)
average_over_days_matrix <- t(average_over_days_matrix)
average_over_days <- average_over_days_matrix
dim(average_over_days) <- NULL
qplot(x = intervals,
y = average_over_days,
geom = "line", xlab = "Time Interval", ylab = "Average steps over days",
facets = .~weekend, data = fix_data)+
scale_x_datetime(labels = date_format("%H:00"))
average_over_days_matrix <- tapply(X = fix_data$steps,
INDEX = list(as.factor(work_data$date$hour),
as.factor(work_data$date$min)),
FUN = mean)
average_over_days_matrix <- t(average_over_days_matrix)
average_over_days <- average_over_days_matrix
dim(average_over_days) <- NULL
qplot(x = intervals,
y = average_over_days,
geom = "line", xlab = "Time Interval", ylab = "Average steps over days",
facets = weekend~., data = fix_data)+
scale_x_datetime(labels = date_format("%H:00"))
average_over_days_matrix <- tapply(X = fix_data$steps,
INDEX = list(fix_data$weekend,
as.factor(fix_data$date$hour),
as.factor(fix_data$date$min)),
FUN = mean)
str(average_over_days_matrix)
average_over_days_matrix
average_over_days_matrix <- tapply(X = fix_data$steps,
INDEX = list(as.factor(fix_data$date$hour),
as.factor(fix_data$date$min)
fix_data$weekend),
FUN = mean)
average_over_days_matrix <- tapply(X = fix_data$steps,
INDEX = list(as.factor(fix_data$date$hour),
as.factor(fix_data$date$min),
fix_data$weekend),
FUN = mean)
average_over_days_matrix
class(average_over_days_matrix)
average_over_days_matrix[1]
average_over_days_matrix[2]
average_over_days_matrix[,,1]
average_over_days_matrix[,,2]
average_over_days_matrix[,,3]
average_over_days_matrix[,,2]
average_over_days_array <- tapply(X = fix_data$steps,
INDEX = list(as.factor(fix_data$date$min),
as.factor(fix_data$date$hour),
fix_data$weekend),
FUN = mean)
average_over_days_weekday <- average_over_days_array[,,1]
average_over_days_weekend <- average_over_days_array[,,2]
dim(average_over_days_weekday) <- NULL
dim(average_over_days_weekend) <- NULL
str(average_over_days_weekday)
str(average_over_days_weekend)
?rep
weekend <- factor(c(rep("weekday", 288), rep("weekend", 288)))
str(weekend)
qplot(x = intervals,
y = temp,
geom = "line", xlab = "Time Interval", ylab = "Average steps over days",
facets = weekend~.)+
scale_x_datetime(labels = date_format("%H:00"))
temp <- c(average_over_days_weekday, average_over_days_weekend)
weekend <- factor(c(rep("weekday", 288), rep("weekend", 288)))
qplot(x = intervals,
y = temp,
geom = "line", xlab = "Time Interval", ylab = "Average steps over days",
facets = weekend~.)+
scale_x_datetime(labels = date_format("%H:00"))
str(intervals)
temp <- cbind(average_over_days_weekday, average_over_days_weekend)
weekend <- factor(c(rep("weekday", 288), rep("weekend", 288)))
qplot(x = intervals,
y = temp,
geom = "line", xlab = "Time Interval", ylab = "Average steps over days",
facets = weekend~.)+
scale_x_datetime(labels = date_format("%H:00"))
temp <- rbind(average_over_days_weekday, average_over_days_weekend)
weekend <- factor(c(rep("weekday", 288), rep("weekend", 288)))
qplot(x = intervals,
y = temp,
geom = "line", xlab = "Time Interval", ylab = "Average steps over days",
facets = weekend~.)+
scale_x_datetime(labels = date_format("%H:00"))
qplot(x = intervals,
y = average_over_days_weekday,
geom = "line", xlab = "Time Interval", ylab = "Average steps over days",
facets = weekend~.)+
scale_x_datetime(labels = date_format("%H:00"))
qplot(x = intervals,
y = average_over_days_weekday,
geom = "line", xlab = "Time Interval", ylab = "Average steps over days")+
scale_x_datetime(labels = date_format("%H:00"))
par(mfrow=c(2,1))
qplot(x = intervals,
y = average_over_days_weekday,
geom = "line", xlab = "Time Interval", ylab = "Average steps over weekdays")+
scale_x_datetime(labels = date_format("%H:00"))
qplot(x = intervals,
y = average_over_days_weekend,
geom = "line", xlab = "Time Interval", ylab = "Average steps over weekend")+
scale_x_datetime(labels = date_format("%H:00"))
temp <- c(average_over_days_weekday, average_over_days_weekend)
qplot(x = rep(intervals,2),
y = temp,
geom = "line", xlab = "Time Interval", ylab = "Average steps over weekdays",
facet = .~weekend, data = fix_data)+
scale_x_datetime(labels = date_format("%H:00"))
str(intervals)
str(rep(intervals,2))
str(temp)
temp <- c(average_over_days_weekday, average_over_days_weekend)
weekend <- factor(c(rep("weekday",288), rep("weekend"),288))
qplot(x = rep(intervals,2),
y = temp,
geom = "line", xlab = "Time Interval", ylab = "Average steps over weekdays",
facet = .~weekend)+
scale_x_datetime(labels = date_format("%H:00"))
temp <- c(average_over_days_weekday, average_over_days_weekend)
weekend <- factor(c(rep("weekday",288), rep("weekend"),288))
qplot(x = rep(intervals,2),
y = temp,
geom = "line", xlab = "Time Interval", ylab = "Average steps over weekdays",
facets = .~weekend)+
scale_x_datetime(labels = date_format("%H:00"))
str(rep(intervals,2))
str(temp)
str(weekend)
lenfth(weekend)
length(weekend)
temp_week <- factor(c(rep("weekday",288), rep("weekend"),288))
str(temp_week)
?rep
temp_week <- factor(c(rep("weekday",each = 288), rep("weekend",each = 288)))
str(temp_week)
length(temp_week)
temp <- c(average_over_days_weekday, average_over_days_weekend)
temp_weekend <- factor(c(rep("weekday",each = 288), rep("weekend",each = 288)))
qplot(x = rep(intervals,2),
y = temp,
geom = "line", xlab = "Time Interval", ylab = "Average steps over weekdays",
facet = .~temp_weekend)+
scale_x_datetime(labels = date_format("%H:00"))
temp <- c(average_over_days_weekday, average_over_days_weekend)
temp_weekend <- factor(c(rep("weekday",each = 288), rep("weekend",each = 288)))
qplot(x = rep(intervals,2),
y = temp,
geom = "line", xlab = "Time Interval", ylab = "Average steps over weekdays",
facets = .~temp_weekend)+
scale_x_datetime(labels = date_format("%H:00"))
matr <- matrix(data = C(4,9,1,7,3,2,6,4,4,5,3,4,7,3,6,2,2,5,7,0,4,8,5,5,6,1,4,6,4,4,8,2,9,0,2,6), nrow = 6, ncol = 6, byrow = TRUE)
matr <- matrix(data = c(4,9,1,7,3,2,6,4,4,5,3,4,7,3,6,2,2,5,7,0,4,8,5,5,6,1,4,6,4,4,8,2,9,0,2,6), nrow = 6, ncol = 6, byrow = TRUE)
matr
rowMeans(matr)
matr2 = t(matr)
matr2
s1 <- matr[1,]
s2 <- matr[2,]
s4 <- matr[3,]
s3 <- matr[3,]
s4 <- matr[4,]
s5 <- matr[5,]
s6 <- matr[6,]
a <- 0
b <- 0
for(i in seq(from = 0, to = 1, by = 0.001)){
for(j in seq(from = 0, to = i, by = 0.001)){
if(all(s2-(i*s1+j*s4+(1-i-j)*s6))<0) {
print(i*s1+j*s4+(1-i-j)*s6)
print(s2)
}
}
}
for(i in seq(from = 0, to = 1, by = 0.001)){
for(j in seq(from = 0, to = i, by = 0.001)){
if(all(s2-(i*s1+j*s4+(1-i-j)*s6))<0) {
print(i*s1+j*s4+(1-i-j)*s6)
print(s2)
break
}
}
}
warnings()
for(i in seq(from = 0, to = 1, by = 0.001)){
for(j in seq(from = 0, to = i, by = 0.001)){
if(all((s2-(i*s1+j*s4+(1-i-j)*s6))<0) {
print(i*s1+j*s4+(1-i-j)*s6)
print(s2)
break
}
}
}
for(i in seq(from = 0, to = 1, by = 0.001)){
for(j in seq(from = 0, to = i, by = 0.001)){
if(all((s2-(i*s1+j*s4+(1-i-j)*s6))<0) {
print(i*s1+j*s4+(1-i-j)*s6)
print(s2)
}
}
}
for(i in seq(from = 0, to = 1, by = 0.001)){for(j in seq(from = 0, to = i, by = 0.001)){if(all((s2-(i*s1+j*s4+(1-i-j)*s6))<0) {print(i*s1+j*s4+(1-i-j)*s6)
print(s2)
}
}
}
for(i in seq(from = 0, to = 1, by = 0.001)){
for(j in seq(from = 0, to = i, by = 0.001)){
if(all((s2-(i*s1+j*s4+(1-i-j)*s6))<0) {
print(i*s1+j*s4+(1-i-j)*s6)
print(s2)}}}
source('C:/Coursera/R/RR.A1/model.R')
source('C:/Coursera/R/RR.A1/model.R')
source('C:/Coursera/R/RR.A1/model.R')
model()
source('C:/Coursera/R/RR.A1/model.R')
model()
source('C:/Coursera/R/RR.A1/model.R')
source('C:/Coursera/R/RR.A1/model2.R')
model2()
source('C:/Coursera/R/RR.A1/model3.R')
model3()
source('C:/Coursera/R/RR.A1/model3.R')
model3()
source('C:/Coursera/R/RR.A1/model3.R')
model3()
source('C:/Coursera/R/RR.A1/model.R')
model1()
source('C:/Coursera/R/RR.A1/model2.R')
model2()
source('C:/Coursera/R/RR.A1/model4.R')
source('C:/Coursera/R/RR.A1/model4.R')
model4()
source('C:/Coursera/R/RR.A1/model4.R')
model4()
warnings()
source('C:/Coursera/R/RR.A1/model4.R')
source('C:/Coursera/R/RR.A1/model4.R')
model4()
source('C:/Coursera/R/RR.A1/model4.R')
model4()
source('C:/Coursera/R/RR.A1/model4.R')
model4()
source('C:/Coursera/R/RR.A1/model4.R')
model4()
source('C:/Coursera/R/RR.A1/model4.R')
d <- model4()
class(d)
source('C:/Coursera/R/RR.A1/model4.R')
d <- model4()
source('C:/Coursera/R/RR.A1/model4.R')
d <- model4()
a1 <- 0.1
a2 <- 0.1
a4 <- 0.1
a3 <- 0.1
a5 <- 0.6
sum(a1*s1+a2*s2+a3*s3+a4*s4+a5*s5+(1-a1-a2-a3-a4-a5)*s6))
sum(a1*s1+a2*s2+a3*s3+a4*s4+a5*s5+(1-a1-a2-a3-a4-a5)*s6)
source('C:/Coursera/R/RR.A1/model4.R')
source('C:/Coursera/R/RR.A1/model3.R')
source('C:/Coursera/R/RR.A1/model3.R')
source('C:/Coursera/R/RR.A1/model3.R')
model3
model3()
class(s1)
class(s4)
class(s6)
model3 <- function(){
for(a1 in seq(from = 0, to = 1, by = 0.001)){
for(a4 in seq(from = 0, to = (1-a1), by =  0.001)){
if(max < sum(a1*s1+a4*s4+(1-a1-a4)*s6) ){
max <- sum(a1*s1+a4*s4+(1-a1-a4)*s6)
pos <- paste0(a1,"*s1+",a4,"*s4+",(1-a1-a4),"*s6")
}
}
print(max)
print(pos)
}
}
MODEL3()
model3()
source('C:/Coursera/R/RR.A1/model3.R')
model3()
source('C:/Coursera/R/RR.A1/model3.R')
model3()
source('C:/Coursera/R/RR.A1/model3.R')
model3()
source('C:/Coursera/R/RR.A1/model3.R')
model3()
source('C:/Coursera/R/RR.A1/model4.R')
mode4()
model4()
source('C:/Coursera/R/RR.A1/model4.R')
model4()
source('C:/Coursera/R/RR.A1/model4.R')
model4()
matr
rowMeans(matr)
s4-s2
s4-s6
matr2[4,]-matr2[6,]
sum(s4-s6)
sum(matr2[4,]-matr2[6,])
source('C:/Coursera/R/RR.A1/model4.R')
source('C:/Coursera/R/RR.A1/model4.R')
model4()
