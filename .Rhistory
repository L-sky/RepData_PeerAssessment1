doc <- read.csv(unzip("activity.zip"))
setwd("C:\\Coursera\\R\\RR.A1")
doc <- read.csv(unzip("activity.zip"))
library(dplyr)
library(ggplot2)
for(i in 1:length(doc$interval)){
if(nchar(doc$interval[i])==1) {doc$interval[i]<-paste0("000",doc$interval[i])}
if(nchar(doc$interval[i])==2) {doc$interval[i]<-paste0("00",doc$interval[i])}
if(nchar(doc$interval[i])==3) {doc$interval[i]<-paste0("0",doc$interval[i])}
}
work_data <- data.frame()
mutate(.data = work_data, steps = doc[,1])
work_data <- doc
mutate(.data = work_data, steps = doc[,1])
head(mutate(.data = work_data, steps = doc[,1]))
head(mutate(.data = work_data, steps = doc[,1]),n = 30)
head(mutate(.data = work_data, steps = doc[,1]),n = 100)
head(mutate(.data = work_data, steps = doc[,1]),n = 1000)
?dplyr
?arrange
work_data <- mutate(.data = work_data,
date = as.POSIXct(paste0(doc$date, doc$interval), format = "%Y-%m-%d%H%M"))
head(work_data)
doc <- read.csv(unzip("activity.zip"))
library(dplyr)
library(ggplot2)
for(i in 1:length(doc$interval)){
if(nchar(doc$interval[i])==1) {doc$interval[i]<-paste0("000",doc$interval[i])}
if(nchar(doc$interval[i])==2) {doc$interval[i]<-paste0("00",doc$interval[i])}
if(nchar(doc$interval[i])==3) {doc$interval[i]<-paste0("0",doc$interval[i])}
}
work_data <- doc
work_data <- mutate(.data = work_data,
date2 = as.POSIXct(paste0(doc$date, doc$interval), format = "%Y-%m-%d%H%M"))
head(work_data)
work_data$date2
work_data$date2[1]
head(work_data)
work_data <- mutate(.data = work_data,
date2 = as.POSIXlt(paste0(doc$date, doc$interval), format = "%Y-%m-%d%H%M"))
work_data$date2 <- as.POSIXlt(work_data$date2)
head(work_data)
work_data$date2[1]
work_data$date2[1]$sec
work_data$date2[1]$min
work_data$date2[10]$min
for(i in 1:length(doc$interval)){
if(nchar(doc$interval[i])==1) {doc$interval[i]<-paste0("000",doc$interval[i])}
if(nchar(doc$interval[i])==2) {doc$interval[i]<-paste0("00",doc$interval[i])}
if(nchar(doc$interval[i])==3) {doc$interval[i]<-paste0("0",doc$interval[i])}
}
work_data <- doc
work_data <- mutate(.data = work_data,
date = as.POSIXct(paste0(doc$date, doc$interval), format = "%Y-%m-%d%H%M"))
work_data$date <- as.POSIXlt(work_data$date)
work_data <- select(.data = work_data, steps, date)
head(work_date)
head(work_data)
work_data$date$day[1]
work_data$date$day[132]
work_data$date$days[132]
work_data$date$days[1]
work_data$date$min[1]
>work_data$date
?work_data$date
work_data$date()
help(work_data$date)
help(POSIXlt)
days <- as.factor(work_data$date$mday)
days
work_data$date$mon
str(as.factor(work_data$date$mon))
head(work_data)
tail(work_adat)
tail(work_data)
str(trunc(work_data$date, "days"))
as.factor(trunc(work_data$date, "days"))
days <- as.factor(as.character(trunc(work_data$date, "days")))
str(days)
length(days)
dim(work_data)
?summarize
days <- as.factor(as.character(trunc(work_data$date, "days")))
mean_steps_per_day <- work_data %>% group_by(days) %>% summarize(fun(mean))
mean_steps_per_day <- work_data %>% group_by(days) %>% summarize(fun(mean[,1]))
mean_steps_per_day <- work_data %>% group_by(as.factor(as.character(trunc(date, "days"))) %>% summarize(fun(mean))
)
mean_steps_per_day <- work_data %>% group_by(as.factor(as.character(trunc(date, "days")))) %>% summarize(fun(mean))
mean_steps_per_day <- work_data[,1] %>% group_by(days) %>% summarize(fun(mean))
class(days)
class(work_data[,1])
total_steps_per_day <- tapply(X = work_data$steps,
INDEX = days,
FUN = sum)
total_steps_per_day
total_steps_per_day[1]
total_steps_per_day[2]
total_steps_per_day <- tapply(X = work_data$steps,
INDEX = days,
FUN = sum.
na.rm = TRUE)
total_steps_per_day <- tapply(X = work_data$steps,
INDEX = days,
FUN = sum,
na.rm = TRUE)
total_steps_per_day[1]
total_steps_per_day[2]
total_steps_per_day[3]
total_steps_per_day[4]
doc[1]
work_data[1,1]
head(work_data)
head(work_data,n=200)
qplot(x = total_steps_per_day, binwidth = 500, xlab = "Total steps per day")
steps_mean <- as.character(mean(total_steps_per_day, na.rm = TRUE))
steps_median <- median(total_steps_per_day, na.rm = TRUE)
steps_mean
steps_median
steps_mean <- as.character(mean(total_steps_per_day))
steps_median <- median(total_steps_per_day)
steps_median
steps_mean
?POSIXlt
average_over_days <- work_data %>% group_by(date$hour, date$min) %>% summarise_each(funs(mean), steps)
work_data$date$hour[1]
class(work_data$date$hour[1])
class(as.factor(work_data$date$hour))
str(as.factor(work_data$date$hour))
str(as.factor(work_data$date$min))
average_over_days <- work_data %>% group_by(as.factor(date$hour), as.factor(date$min)) %>% summarise_each(funs(mean), steps)
average_over_days <- work_data %>% group_by(date$hour) %>% summarise_each(funs(mean), steps)
average_over_days <- work_data[,1] %>% group_by(date$hour) %>% summarise_each(funs(mean))
average_over_days <- tapply(X = work_data$steps,
INDEX = c(work_data$date$hour, work_data$date$min),
FUN = mean)
average_over_days <- tapply(X = work_data$steps,
INDEX = c(as.factor(work_data$date$hour),
as.factor(work_data$date$min)),
FUN = mean)
length(work_data$steps)
length(as.factor(work_data$date$hour))
length(as.factor(work_data$date$min))
length(as.factor(work_data$date$min))
average_over_days <- tapply(X = work_data$steps,
INDEX = list(as.factor(work_data$date$hour),
as.factor(work_data$date$min)),
FUN = mean)
average_over_days[1]
str(average_over_days)
average_over_days <- tapply(X = work_data$steps,
INDEX = list(as.factor(work_data$date$hour),
as.factor(work_data$date$min)),
FUN = mean,
na.rm = TRUE)
str(average_over_days)
average_over_days[1]
average_over_days[2]
average_over_days[3]
qplot(x = as.Date(paste0(work_data$date$hour, work_data$date$min), format = "%H%M"), y = average_over_days)
x <- as.Date(paste0(work_data$date$hour, work_data$date$min)
,format="%H%M")
str(x)
str(average_over_days)
average_over_days
class(unaverage_over_days)
class(average_over_days)
dim(average_over_days) <- NULL
length(average_over_days)
average_over_days[3]
dim(average_over_days)
average_over_days
average_over_days <- tapply(X = work_data$steps,
INDEX = list(as.factor(work_data$date$hour),
as.factor(work_data$date$min)),
FUN = mean,
na.rm = TRUE)
average_over_days
t(average_over_days)
dim(average_over_days)<-NULL
average_over_days
average_over_days <- tapply(X = work_data$steps,
INDEX = list(as.factor(work_data$date$hour),
as.factor(work_data$date$min)),
FUN = mean,
na.rm = TRUE)
average_over_days <- t(average_over_days)
dim(average_over_days)<-NULL
average_over_days
str(x)
str(unique()x)
str(unique(x))
x = strptime(paste0(work_data$date$hour, work_data$date$min), format = "%H%M")
str(x)
str(unique(x))
str(work_data$date$hour)
str(work_data$date$min)
str(paste0(work_data$date$hour, work_data$date$min))
x = as.Date(paste0(work_data$date$hour,"-", work_data$date$min), format = "%H-%M")
str(x)
str(unique(x))
x = strptime(paste0(work_data$date$hour,"-", work_data$date$min), format = "%H-%M")
str(x)
str(unique(x))
qplot(x = as.Date(paste0(work_data$date$hour,"-", work_data$date$min), format = "%H-%M"),
y = average_over_days)
qplot(x = unique(strptime(paste0(work_data$date$hour,"-", work_data$date$min),
format = "%H-%M")),
y = average_over_days)
qplot(x = unique(strptime(paste0(work_data$date$hour,"-", work_data$date$min),
format = "%H-%M")),
y = average_over_days,
type = "line", xlab = "Interval", ylab = "Average over days")
?qplot
qplot(x = unique(strptime(paste0(work_data$date$hour,"-", work_data$date$min),
format = "%H-%M")),
y = average_over_days,
geom = "line", xlab = "Interval", ylab = "Average over days")
intervals <- strptime(paste0(work_data$date$hour,"-", work_data$date$min),
format = "%H-%M")
intervals$hour
intervals$mday
intervals$mdays <- intervals$mdays[1]
qplot(x = intervals,
y = average_over_days,
geom = "line", xlab = "Interval", ylab = "Average over days")
intervals <- unique(intervals)
qplot(x = intervals,
y = average_over_days,
geom = "line", xlab = "Interval", ylab = "Average over days")
dtTime <- as.numeric(intervals - trunc(intervals, "days"))
qplot(x = dtTime, y = average_over_days)
intervals <- as.POSIXct(paste0(work_data$date$hour,"-", work_data$date$min),
format = "%H-%M")
intervals <- unique(intervals)
str(intervals)
qplot(x = intervals,
y = average_over_days,
geom = "line", xlab = "Interval", ylab = "Average over days",
scale_x_datetime(labels = date_format("%S:00"))
)
p<-qplot(x = intervals,
y = average_over_days,
geom = "line", xlab = "Interval", ylab = "Average over days")+
scale_x_datetime(labels = date_format("%S:00"))
library(scales)
p<-qplot(x = intervals,
y = average_over_days,
geom = "line", xlab = "Interval", ylab = "Average over days")+
scale_x_datetime(labels = date_format("%S:00"))
print(p)
qplot(x = intervals,
y = average_over_days,
geom = "line", xlab = "Interval", ylab = "Average over days",
scale_x_datetime(labels = date_format("%S:00")))
qplot(x = intervals,
y = average_over_days,
geom = "line", xlab = "Interval", ylab = "Average over days")+
scale_x_datetime(labels = date_format("%S:00"))
qplot(x = intervals,
y = average_over_days,
geom = "line", xlab = "Interval", ylab = "Average over days")+
scale_x_datetime(labels = date_format("%H:00"))
max_steps <- intervals[which.max(average_over_days)]
max_steps
max_steps <- paste0(intervals[which.max(average_over_days)]$hour,":",intervals[which.max(average_over_days)]$min)
class(max_steps)
pre_position <- as.POSIXlt(intervals[which.max(average_over_days)])
max_steps <- paste0(preposition$hour,":",pre_position$min)
pre_position <- as.POSIXlt(intervals[which.max(average_over_days)])
max_steps <- paste0(pre_position$hour,":",pre_position$min)
max_steps
total_steps_per_day <- tapply(X = work_data$steps,
INDEX = days,
FUN = sum,
na.rm = TRUE)
str(total_steps_per_day)
average_over_days_matrix <- tapply(X = work_data$steps,
INDEX = list(as.factor(work_data$date$hour),
as.factor(work_data$date$min)),
FUN = mean,
na.rm = TRUE)
average_over_days_matrix <- t(average_over_days_matrix)
str(average_over_days_matrix)
average_over_days_matrix
average_over_days_matrix[1,1]
average_over_days_matrix[0,0]
average_over_days_matrix[1,1]
average_over_days_matrix[11,1]
average_over_days_matrix[12,1]
average_over_days_matrix[10,1]
average_over_days_matrix[10,11]
average_over_days_matrix[10,111]
average_over_days_matrix[10,11]
average_over_days_matrix[10,12]
average_over_days_matrix
dim(average_over_days_matrix)
average_over_days_matrix[12,24]
average_over_days_matrix[13,24]
average_over_days_matrix[12,24]
average_over_days_matrix[12,25]
fix_data$steps[is.na(fix_data$steps)] <-
average_over_days[(fix_data$date(which(is.na(fix_data$steps)))$min/5)+1,fix_data$date(which(is.na(fix_data$steps)))$hour]
fix_data <- work_data
fix_data$steps[is.na(fix_data$steps)] <-
average_over_days[(fix_data$date(which(is.na(fix_data$steps)))$min/5)+1,fix_data$date(which(is.na(fix_data$steps)))$hour]
fix_data$steps[is.na(fix_data$steps)] <- average_over_days[(fix_data$date(which(is.na(fix_data$steps)))$min/5)+1,fix_data$date(which(is.na(fix_data$steps)))$hour]
(fix_data$date(which(is.na(fix_data$steps)))$min/5)+1
fix_data$date(which(is.na(fix_data$steps)))$min
which(is.na(fix_data$steps))
fix_data$date(which(is.na(fix_data$steps)))
fix_data$date[which(is.na(fix_data$steps)))]
fix_data$date[which(is.na(fix_data$steps))]
fix_data <- work_data
fix_data$steps[is.na(fix_data$steps)] <- average_over_days[(fix_data$date[which(is.na(fix_data$steps))]$min/5)+1,fix_data$date[which(is.na(fix_data$steps))]$hour]
fix_data <- work_data
fix_data$steps[is.na(fix_data$steps)] <- average_over_days_matrix[(fix_data$date[which(is.na(fix_data$steps))]$min/5)+1,fix_data$date[which(is.na(fix_data$steps))]$hour]
a <- average_over_days_matrix[(fix_data$date[which(is.na(fix_data$steps))]$min/5)+1,fix_data$date[which(is.na(fix_data$steps))]$hour]
str(a)
average_over_days_matrix <- tapply(X = work_data$steps,
INDEX = list(as.factor(work_data$date$hour),
as.factor(work_data$date$min)),
FUN = mean,
na.rm = TRUE)
average_over_days_matrix <- t(average_over_days_matrix)
average_over_days < - average_over_days_matrix
dim(average_over_days) <- NULL
intervals <- as.POSIXct(paste0(work_data$date$hour,"-", work_data$date$min),
format = "%H-%M")
intervals <- unique(intervals)
intervals <- as.numeric(intervals - trunc(intervals, "days"))
qplot(x = intervals,
y = average_over_days,
geom = "line", xlab = "Time Interval", ylab = "Average steps over days")+
scale_x_datetime(labels = date_format("%H:00"))
intervals <- as.numeric(intervals - trunc(intervals, "days"))
qplot(x = intervals,
y = average_over_days,
geom = "line", xlab = "Time Interval", ylab = "Average steps over days")+
scale_x_datetime(labels = date_format("%H:00"))
average_over_days_matrix <- tapply(X = work_data$steps,
INDEX = list(as.factor(work_data$date$hour),
as.factor(work_data$date$min)),
FUN = mean,
na.rm = TRUE)
average_over_days_matrix <- t(average_over_days_matrix)
average_over_days < - average_over_days_matrix
dim(average_over_days) <- NULL
intervals <- as.POSIXct(paste0(work_data$date$hour,"-", work_data$date$min),
format = "%H-%M")
intervals <- unique(intervals)
qplot(x = intervals,
y = average_over_days,
geom = "line", xlab = "Time Interval", ylab = "Average steps over days")+
scale_x_datetime(labels = date_format("%H:00"))
average_over_days_matrix <- tapply(X = work_data$steps,
INDEX = list(as.factor(work_data$date$hour),
as.factor(work_data$date$min)),
FUN = mean,
na.rm = TRUE)
average_over_days_matrix <- t(average_over_days_matrix)
average_over_days < - average_over_days_matrix
dim(average_over_days) <- NULL
intervals <- as.POSIXct(paste0(work_data$date$hour,"-", work_data$date$min),
format = "%H-%M")
intervals <- unique(intervals)
qplot(x = intervals,
y = average_over_days,
geom = "line", xlab = "Time Interval", ylab = "Average steps over days")+
scale_x_datetime(labels = date_format("%H:00"))
library(scale)
